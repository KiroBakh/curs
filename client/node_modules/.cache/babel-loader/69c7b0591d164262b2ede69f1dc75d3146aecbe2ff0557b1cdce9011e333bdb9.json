{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/military-hospital/client/src/components/EmployeeConstructor.jsx\",\n  _s = $RefreshSig$();\n// Import necessary modules\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/EmployeeConstructor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeConstructor() {\n  _s();\n  const [workers, setWorkers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [contactinformation, setContactInformation] = useState(\"\");\n  const [selectedWorker, setSelectedWorker] = useState(null);\n  useEffect(() => {\n    fetchWorkers();\n  }, []);\n  const fetchWorkers = () => {\n    axios.get(\"http://localhost:3000/api/employees\").then(response => {\n      setWorkers(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching workers: \", error);\n    });\n  };\n  const handleAddWorker = () => {\n    // Create a new worker object\n    const newWorker = {\n      name,\n      position,\n      rank,\n      contactinformation\n    };\n    axios.post(\"http://localhost:3000/api/employees\", newWorker).then(() => {\n      // After adding, refresh the worker list and reset input fields\n      fetchWorkers();\n      setName(\"\");\n      setPosition(\"\");\n      setRank(\"\");\n      setContactInformation(\"\");\n    }).catch(error => {\n      console.error(\"Error adding worker: \", error);\n    });\n  };\n  const handleEditWorker = async () => {\n    if (selectedWorker && selectedWorker.id) {\n      const updatedWorker = {\n        id: selectedWorker.id,\n        name,\n        position,\n        rank,\n        contactinformation\n      };\n      await axios.put(`http://localhost:3000/api/employees/${selectedWorker.id}`, updatedWorker).then(() => {\n        fetchWorkers();\n        setSelectedWorker(null);\n        setName(\"\");\n        setPosition(\"\");\n        setRank(\"\");\n        setContactInformation(\"\");\n      }).catch(error => {\n        console.error(\"Error updating worker: \", error);\n      });\n    } else {\n      console.error(\"Selected worker or its ID is missing. Please select a worker to edit.\");\n    }\n  };\n  const handleDeleteWorker = id => {\n    console.log(id);\n    if (id) {\n      // Check if the ID is defined\n      axios.delete(`http://localhost:3000/api/employees/${id}`).then(() => {\n        fetchWorkers();\n      }).catch(error => {\n        console.error(\"Error deleting worker: \", error);\n      });\n    } else {\n      console.error(\"ID is missing. Unable to delete the worker.\");\n    }\n  };\n\n  // Function to handle worker selection\n  const selectWorker = worker => {\n    setSelectedWorker(worker);\n    setName(worker.name);\n    setPosition(worker.position);\n    setRank(worker.rank);\n    setContactInformation(worker.contactinformation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"worker-constructor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"worker-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Workers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: workers.map((worker, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [worker.name, \" - \", worker.position, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => selectWorker(worker),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteWorker(worker.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, worker.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"worker-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add/Edit Worker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"Position\",\n        value: position,\n        onChange: e => setPosition(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"Rank\",\n        value: rank,\n        onChange: e => setRank(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"Contact Info\",\n        value: contactinformation,\n        onChange: e => setContactInformation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), selectedWorker ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: handleEditWorker,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: handleAddWorker,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeConstructor, \"IBl6xpv3fvayCeaxs8UklPmaJq0=\");\n_c = EmployeeConstructor;\nvar _c;\n$RefreshReg$(_c, \"EmployeeConstructor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","EmployeeConstructor","_s","workers","setWorkers","name","setName","position","setPosition","rank","setRank","contactinformation","setContactInformation","selectedWorker","setSelectedWorker","fetchWorkers","get","then","response","data","catch","error","console","handleAddWorker","newWorker","post","handleEditWorker","id","updatedWorker","put","handleDeleteWorker","log","delete","selectWorker","worker","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/military-hospital/client/src/components/EmployeeConstructor.jsx"],"sourcesContent":["// Import necessary modules\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/EmployeeConstructor.css\";\n\nexport default function EmployeeConstructor() {\n  const [workers, setWorkers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [contactinformation, setContactInformation] = useState(\"\");\n  const [selectedWorker, setSelectedWorker] = useState(null);\n\n  useEffect(() => {\n    fetchWorkers();\n  }, []);\n\n  const fetchWorkers = () => {\n    axios\n      .get(\"http://localhost:3000/api/employees\")\n      .then((response) => {\n        setWorkers(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching workers: \", error);\n      });\n  };\n\n  const handleAddWorker = () => {\n    // Create a new worker object\n    const newWorker = {\n      name,\n      position,\n      rank,\n      contactinformation,\n    };\n\n    axios\n      .post(\"http://localhost:3000/api/employees\", newWorker)\n      .then(() => {\n        // After adding, refresh the worker list and reset input fields\n        fetchWorkers();\n        setName(\"\");\n        setPosition(\"\");\n        setRank(\"\");\n        setContactInformation(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding worker: \", error);\n      });\n  };\n\n  const handleEditWorker = async () => {\n    if (selectedWorker && selectedWorker.id) {\n      const updatedWorker = {\n        id: selectedWorker.id,\n        name,\n        position,\n        rank,\n        contactinformation,\n      };\n\n      await axios\n        .put(\n          `http://localhost:3000/api/employees/${selectedWorker.id}`,\n          updatedWorker\n        )\n        .then(() => {\n          fetchWorkers();\n          setSelectedWorker(null);\n          setName(\"\");\n          setPosition(\"\");\n          setRank(\"\");\n          setContactInformation(\"\");\n        })\n        .catch((error) => {\n          console.error(\"Error updating worker: \", error);\n        });\n    } else {\n      console.error(\n        \"Selected worker or its ID is missing. Please select a worker to edit.\"\n      );\n    }\n  };\n\n  const handleDeleteWorker = (id) => {\n   console.log(id);\n   if (id) {\n     // Check if the ID is defined\n     axios\n       .delete(`http://localhost:3000/api/employees/${id}`)\n       .then(() => {\n         fetchWorkers();\n       })\n       .catch((error) => {\n         console.error(\"Error deleting worker: \", error);\n       });\n   } else {\n     console.error(\"ID is missing. Unable to delete the worker.\");\n   }\n };\n\n  // Function to handle worker selection\n  const selectWorker = (worker) => {\n    setSelectedWorker(worker);\n    setName(worker.name);\n    setPosition(worker.position);\n    setRank(worker.rank);\n    setContactInformation(worker.contactinformation);\n  };\n\n  return (\n    <div className=\"worker-constructor\">\n      <div className=\"worker-list\">\n        <h2>Workers</h2>\n        <ul>\n          {workers.map((worker, index) => (\n            <li key={worker.id || index}>\n              {worker.name} - {worker.position}\n              <button onClick={() => selectWorker(worker)}>Edit</button>\n              <button onClick={() => handleDeleteWorker(worker.id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"worker-form\">\n        <h2>Add/Edit Worker</h2>\n        <input\n          type=\"text\"\n          className=\"input-field\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          className=\"input-field\"\n          placeholder=\"Position\"\n          value={position}\n          onChange={(e) => setPosition(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          className=\"input-field\"\n          placeholder=\"Rank\"\n          value={rank}\n          onChange={(e) => setRank(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          className=\"input-field\"\n          placeholder=\"Contact Info\"\n          value={contactinformation}\n          onChange={(e) => setContactInformation(e.target.value)}\n        />\n        {selectedWorker ? (\n          <button className=\"action-button\" onClick={handleEditWorker}>\n            Save\n          </button>\n        ) : (\n          <button className=\"action-button\" onClick={handleAddWorker}>\n            Add\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdkB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAGA,CAAA,KAAM;IACzBjB,KAAK,CACFkB,GAAG,CAAC,qCAAqC,CAAC,CAC1CC,IAAI,CAAEC,QAAQ,IAAK;MAClBd,UAAU,CAACc,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA,MAAMC,SAAS,GAAG;MAChBnB,IAAI;MACJE,QAAQ;MACRE,IAAI;MACJE;IACF,CAAC;IAEDb,KAAK,CACF2B,IAAI,CAAC,qCAAqC,EAAED,SAAS,CAAC,CACtDP,IAAI,CAAC,MAAM;MACV;MACAF,YAAY,CAAC,CAAC;MACdT,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;MACfE,OAAO,CAAC,EAAE,CAAC;MACXE,qBAAqB,CAAC,EAAE,CAAC;IAC3B,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIb,cAAc,IAAIA,cAAc,CAACc,EAAE,EAAE;MACvC,MAAMC,aAAa,GAAG;QACpBD,EAAE,EAAEd,cAAc,CAACc,EAAE;QACrBtB,IAAI;QACJE,QAAQ;QACRE,IAAI;QACJE;MACF,CAAC;MAED,MAAMb,KAAK,CACR+B,GAAG,CACD,uCAAsChB,cAAc,CAACc,EAAG,EAAC,EAC1DC,aACF,CAAC,CACAX,IAAI,CAAC,MAAM;QACVF,YAAY,CAAC,CAAC;QACdD,iBAAiB,CAAC,IAAI,CAAC;QACvBR,OAAO,CAAC,EAAE,CAAC;QACXE,WAAW,CAAC,EAAE,CAAC;QACfE,OAAO,CAAC,EAAE,CAAC;QACXE,qBAAqB,CAAC,EAAE,CAAC;MAC3B,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CACX,uEACF,CAAC;IACH;EACF,CAAC;EAED,MAAMS,kBAAkB,GAAIH,EAAE,IAAK;IAClCL,OAAO,CAACS,GAAG,CAACJ,EAAE,CAAC;IACf,IAAIA,EAAE,EAAE;MACN;MACA7B,KAAK,CACFkC,MAAM,CAAE,uCAAsCL,EAAG,EAAC,CAAC,CACnDV,IAAI,CAAC,MAAM;QACVF,YAAY,CAAC,CAAC;MAChB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,6CAA6C,CAAC;IAC9D;EACF,CAAC;;EAEA;EACA,MAAMY,YAAY,GAAIC,MAAM,IAAK;IAC/BpB,iBAAiB,CAACoB,MAAM,CAAC;IACzB5B,OAAO,CAAC4B,MAAM,CAAC7B,IAAI,CAAC;IACpBG,WAAW,CAAC0B,MAAM,CAAC3B,QAAQ,CAAC;IAC5BG,OAAO,CAACwB,MAAM,CAACzB,IAAI,CAAC;IACpBG,qBAAqB,CAACsB,MAAM,CAACvB,kBAAkB,CAAC;EAClD,CAAC;EAED,oBACEX,OAAA;IAAKmC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCpC,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BpC,OAAA;QAAAoC,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBxC,OAAA;QAAAoC,QAAA,EACGjC,OAAO,CAACsC,GAAG,CAAC,CAACP,MAAM,EAAEQ,KAAK,kBACzB1C,OAAA;UAAAoC,QAAA,GACGF,MAAM,CAAC7B,IAAI,EAAC,KAAG,EAAC6B,MAAM,CAAC3B,QAAQ,eAChCP,OAAA;YAAQ2C,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACC,MAAM,CAAE;YAAAE,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1DxC,OAAA;YAAQ2C,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACI,MAAM,CAACP,EAAE,CAAE;YAAAS,QAAA,EAAC;UAEtD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GALFN,MAAM,CAACP,EAAE,IAAIe,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMvB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNxC,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BpC,OAAA;QAAAoC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBxC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,aAAa;QACvBU,WAAW,EAAC,MAAM;QAClBC,KAAK,EAAEzC,IAAK;QACZ0C,QAAQ,EAAGC,CAAC,IAAK1C,OAAO,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFxC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,aAAa;QACvBU,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvC,QAAS;QAChBwC,QAAQ,EAAGC,CAAC,IAAKxC,WAAW,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFxC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,aAAa;QACvBU,WAAW,EAAC,MAAM;QAClBC,KAAK,EAAErC,IAAK;QACZsC,QAAQ,EAAGC,CAAC,IAAKtC,OAAO,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFxC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,aAAa;QACvBU,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAEnC,kBAAmB;QAC1BoC,QAAQ,EAAGC,CAAC,IAAKpC,qBAAqB,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,EACD3B,cAAc,gBACbb,OAAA;QAAQmC,SAAS,EAAC,eAAe;QAACQ,OAAO,EAAEjB,gBAAiB;QAAAU,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETxC,OAAA;QAAQmC,SAAS,EAAC,eAAe;QAACQ,OAAO,EAAEpB,eAAgB;QAAAa,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtC,EAAA,CApKuBD,mBAAmB;AAAAiD,EAAA,GAAnBjD,mBAAmB;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}